//Algorithm
1. create a new Node and initialize the data;
2. add address of head to next of new node;
3. point the head to the new node.

// 1. Create new_node =key
   2. new_node->next = head 
   3. head = new_node


#approach:

#include<iostream>
using namespace std;
class Node{
      int data;
      Node* next;

     Node(int new_data){
        this->data=new_data;
        this->next =nullptr;       
       }
};

void traversal(Node* head){
       Node* curr =head;
        while(curr!=nullptr){
             cout<<curr->data<<" ";
            curr=curr->next;
}
cout<<endl;
}
Node* insertAtbigg(Node* head,int key){
     Node* newNode= new Node(key);
      newNode->next= head;
      head=newNode;
return head;

}

int main(){
    Node* head = new Node(10);
    head->next = new Node(20);
    head->next->next = new Node(30);
    head->next->next->next = new Node(40);

      traversal(head);
   int key = 50;
   head=   insertAtBigg(head,key);
      traversal(head);

return 0;
}
