//find the length of doubly linked list 
#include<iostream>
using namespace std;
class Node{
    public:
     int data;
     Node*prev,*next;
     Node(int new_data){
         data=new_data;
         prev=next=nullptr;
     }
};

int nodeCount(Node* head){
    int count=0;
    while(head!=nullptr){
        count++;
        head=head->next;
    }
    return count;
}

int main(){
    Node* head=new Node(10);
    head->next=new Node(20);
    head->next->prev = head;
    head->next->next= new Node(30);
    head->next->next->prev= head->next;
    
   cout<< nodeCount(head);
    
    return 0;
}



//find the length of doubly linked list  using recursion
#include<iostream>
using namespace std;
class Node{
    public:
     int data;
     Node* prev,* next;
     Node(int new_data):data(new_data),prev(nullptr),next(nullptr){}
};

int listSize(Node* head){
    if(head==nullptr){
        return 0;
    }
    
    return 1+ listSize(head->next);
}
int main(){
    Node* head = new Node(10);
    head->next = new Node(20);
    head->next->prev = head;
    head->next->next = new Node(30);
    head->next->next->prev = head->next;
    cout<<listSize(head);
    return 0;
}
