//  iterative approach  time-O(n) space -O(1)
// print the second element every time.
#include <iostream>
#include <vector>
using namespace std;

vector<int> getAlternative(vector<int> &v ){
    vector<int>temp;
    for(int i=0;i<v.size();i+=2){
        temp.push_back(v[i]);
    }
    return temp;
}

int main()
{
    vector<int> v={ 1,2,3,4,5,6};
    vector<int> t = getAlternative(v);
     for(auto x:t){
         cout<<x<<endl;
     }
    return 0;
}



//  recurssive approach time-O(n) space-O(n)
// print the second element every time.
#include <iostream>
#include <vector>
using namespace std;

void getAlternativeRec(vector<int> &v ,int i,vector<int> &temp){
    if(i<v.size()){
        temp.push_back(v[i]);
        getAlternativeRec(v,i+2,temp);
    }
}

vector<int> getAlternative(vector<int> &v ){
    vector<int>temp;
    getAlternativeRec(v,0,temp);
    return temp;
}

int main()
{
    vector<int> v={ 1,2,3,4,5,6};
    vector<int> t = getAlternative(v);
     for(auto x:t){
         cout<<x<<endl;
     }
    return 0;
}

