// 1. iterative approach: start from starting index , pick end index, iterate from starting to end index
// time comp: O(n^3) space: O(1)

#include<iostream>
#include<vector>
using namespace std;

void subarray(vector<int> &v){
    int n=v.size();
    
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            for(int k=i;k<=j;k++){
                cout<<v[k]<<" ";
            }
            cout<<endl;
        }
        cout<<endl;
    }
}



int main(){
    
    vector<int> arr={1,2,3,4};
    
    subarray(arr);
    
    return 0;
    
}